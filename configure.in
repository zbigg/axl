dnl
dnl File:	configure.in
dnl Id:		$Id: configure.in 1.14 04/05/22 20:40:51+02:00 zbigg@veinard.dom $
dnl Author:	Zbigniew Zagorski <zzbigg@o2.pl>
dnl
dnl
dnl Process this file with autoconf to produce a configure script.


dnl ---------------------------------------------------------------------------
dnl initialization
dnl ---------------------------------------------------------------------------

AC_INIT(include/axl/axl.h)
AC_CONFIG_HEADER(config.h)
AC_CONFIG_AUX_DIR(misc)

if test -f $srcdir/repo_settings ; then 
    source $srcdir/repo_settings
fi

dnl ---------------------------------------------------------------------------
dnl check version and package settings
dnl ---------------------------------------------------------------------------
CONFIG_VERSION=0.1
PACKAGE=axl
AC_MSG_CHECKING([for package version from $srcdir/VERSION] )
if test -f $srcdir/VERSION  ; then
	VERSION=`cat $srcdir/VERSION`
else
	CFG_DATE=`date +%Y%m%d`
	VERSION="$CONFIG_VERSION.$CFG_DATE"
fi

if test "X$REPO_BRANCH" != "X" ; then
    VERSION="$VERSION-$REPO_BRANCH"
fi

AC_MSG_RESULT([ $VERSION ])
VERSION_MAJOR=`echo $VERSION | sed 's/\..*//'`

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(VERSION_MAJOR)

AC_DEFINE_UNQUOTED(PACKAGE,"$PACKAGE",[package short name])
AC_DEFINE_UNQUOTED(VERSION,"$VERSION",[package version])
AC_DEFINE_UNQUOTED(HAVE_ZPIO,1,[always have zpio library])
AC_DEFINE_UNQUOTED(BUILD_XL,1,[tell other libraries that we are inside axl])

dnl ---------------------------------------------------------------------------
dnl compiler and other building stuff
dnl ---------------------------------------------------------------------------

AC_PROG_CC
AC_PROG_YACC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_LEX
AC_PROG_MAKE_SET
AC_PROG_RANLIB

GNUWIN=no

dnl ---------------------------------------------------------------------------
dnl check target system configuration
dnl ---------------------------------------------------------------------------

AC_EXEEXT
AC_CANONICAL_SYSTEM

AC_MSG_CHECKING([Build system shell configuration ... ])
case "$target" in
*-*-freebsd*)
	AC_MSG_RESULT(BSD)
	CP_R="cp -P -R"
	CP="cp -P"
	;;
*-*-gnu*|*-cygwin|*-cygwin*|*-mingw|*-mingw32)
	AC_MSG_RESULT(GNU)
	CP_R="cp -rp"
	CP="cp -p"
	;;
*)
	AC_MSG_RESULT(unknown)
	CP_R="cp -r"
	CP="cp"
	;;
esac

case "$target" in
*-cygwin|*-cygwin*)
	CYGWIN="yes";
	;;
*-mingw|*-mingw32)
	MINGW32="yes";
	GNUWIN="yes"
	;;
esac

AC_SUBST(GNUWIN)
AC_SUBST(MINGW32)
AC_SUBST(CYGWIN)

AC_SUBST(CP_R)
AC_SUBST(CP)


dnl ---------------------------------------------------------------------------
dnl check for build options: debug/shared ... etc
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(
    gcov,
    [  --enable-gcov		build all with coverage test infortation for gcov (def=no) ],
    [ arg_gcov=$enableval ],
    [ arg_gcov=no ])

AC_ARG_ENABLE(
    debug,
    [  --enable-debug		build library with debug information (def=no) ],
    [ arg_debug=$enableval ],
    [ arg_debug=no ])

AC_ARG_ENABLE(
    shared,
    [  --enable-shared		build shared library (def=yes) ],
    [ arg_shared=$enableval ],
    [ arg_shared=yes ])

AC_ARG_ENABLE(
    shared-modules,
    [  --enable-shared-modules	modules are in DLL/SO (def=yes) ],
    [ arg_shared_modules=$enableval ],
    [ arg_shared_modules=yes ])

AC_MSG_CHECKING(for debug)
SHARED_MODULES=$arg_shared_modules
AC_SUBST(SHARED_MODULES)

BUILD_GCC=no
if test "X$GCC" = "Xyes" ; then
    BUILD_GCC=$GCC
fi

AC_SUBST(BUILD_GCC)

AC_MSG_CHECKING(for debug and base CFLAGS)
if  test "$arg_debug" == "no" ; then
    LIBNAME=xl
    XL_LIBNAME=xl
    ZCOMPAT_NAMES="zcompat zcompat0 zcompatd zcompatd0"
else
    LIBNAME=xld
    XL_LIBNAME=xld
    CFLAGS="$CFLAGS"
    ZCOMPAT_NAMES="zcompatd zcompatd0 zcompat zcompat0"
fi

if test "X$BUILD_GCC" == "Xyes" ; then
    CFLAGS="$CFLAGS -MMD"
    if test "$arg_debug" != "no" ; then
	CFLAGS="$CFLAGS -Wall"
    fi
    #
    # coverage test only when using gcc
    #
    if  test "$arg_gcov" == "yes" ; then
	CFLAGS="-fprofile-arcs -ftest-coverage $CFLAGS"
	LDFLAGS="-fprofile-arcs -ftest-coverage $LDFLAGS"
    fi
fi
SHARED=$arg_shared
DEBUG=$arg_debug
PROFILE=no


AC_MSG_RESULT([ debug: $arg_debug, CFLAGS=$CFLAGS ])
AC_MSG_CHECKING(for LIBNAME )
AC_MSG_RESULT([ LIBNAME=$LIBNAME ])

AC_SEARCH_LIBS(zprintf, [ $ZCOMPAT_NAMES ] ,
	[  ],
	[ AC_ERROR([zcompat library not found, it's required to build axl]) ]
	)

AC_SUBST(SHARED)
AC_SUBST(DEBUG)
AC_SUBST(PROFILE)
AC_SUBST(LIBNAME)

AC_MSG_CHECKING(for shared)
SHARED_EXT=so

AC_MSG_CHECKING(for shared)
AC_MSG_RESULT([ $arg_shared, SHARED_EXT=$SHARED_EXT ])

dnl ---------------------------------------------------------------------------
dnl deterimine library names
dnl ---------------------------------------------------------------------------

LIBXL_NAME=$XL_LIBNAME$VERSION_MAJOR
AC_SUBST(XL_LIBNAME)
AC_SUBST(LIBXL_NAME)

XL_LIBS="$XL_LIBS $LIBS"
if test $arg_shared == "yes" ;then
	PROG_LIBS="-l$LIBXL_NAME"
	LIBXL_LIBS="$XL_LIBS -lm"
else
	PROG_LIBS="-l$LIBXL_NAME $XL_LIBS -lm"
fi

MODULES_LIBS=$PROG_LIBS

AC_MSG_CHECKING([for libs to link libxl])
AC_MSG_RESULT([$LIBXL_LIBS])
AC_MSG_CHECKING([for libs to link modules])
AC_MSG_RESULT([$MODULES_LIBS])
AC_MSG_CHECKING([for libs to link programs])
AC_MSG_RESULT([$PROG_LIBS])

AC_SUBST(PROG_LIBS)
AC_SUBST(MODULES_LIBS)
AC_SUBST(LIBXL_LIBS)

AC_SUBST(SHARED_EXT)
AC_SUBST(BUILD_DLL)

dnl ---------------------------------------------------------------------------
dnl check for other tools such as docbook processors
dnl ---------------------------------------------------------------------------

AC_CHECK_PROGS(TAR, gnutar gtar tar)
AC_CHECK_PROGS(FLEX, flex lex)
AC_CHECK_PROGS(DLLTOOL, dlltool)
AC_CHECK_PROGS(XMLTO, xmlto)
AC_CHECK_PROGS(DBGEN, dbgen)

dnl ---------------------------------------------------------------------------
dnl check for C stuff: includes, fucntions and libraries
dnl ---------------------------------------------------------------------------
dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(malloc.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl AC_CHECK_SIZEOF(void*)
dnl AC_CHECK_SIZEOF(char)
dnl AC_CHECK_SIZEOF(short)
dnl AC_CHECK_SIZEOF(int)
dnl AC_CHECK_SIZEOF(long)
dnl AC_CHECK_SIZEOF(long long)
dnl AC_CHECK_SIZEOF(__int64)

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday mktime strcspn strdup strtod strtol strcasecmp stricmp strncasecmp strnicmp)


dnl ---------------------------------------------------------------------------
dnl Detect PostgreSQL module building
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(
    postgresql,
    [  --enable-postgresql[=x]	enable PostgreSQL module [default=/usr/local]],
    [ test "X$enableval" != "Xno" &&
	{
         xl_ext_postgresql=yes ;
         xl_ext_postgresql_path="$enableval"
      } ],
    [ xl_ext_postgresql=yes && xl_ext_postgresql_path=/usr/local ])

AC_CHECK_HEADERS(pgsql/libpq-fe.h libpq-fe.h postgresql/libpq-fe.h)

POSTGRESQL_ENABLED=0
if test -n "$xl_ext_postgresql" ; then
    xl_postgresqlnocfgscript=no
    AC_PATH_PROGS(
	POSTGRESQL_CONFIG, pg_config,
	    no_config_script,
	    "$PATH:$xl_ext_postgresql_path/bin:/usr/local/pgsql/bin")

    if test "X$POSTGRESQL_CONFIG" == "Xno_config_script" ; then
	POSTGRESQL_LIBS="$xl_ext_postgresql_path/lib"
	POSTGRESQL_INCLUDE="$xl_ext_postgresql_path/include"
	
	POSTGRESQL_LIBS="-L$POSTGRESQL_LIBS -lpq"
	POSTGRESQL_INCLUDE="-I$POSTGRESQL_INCLUDE"
    else
	POSTGRESQL_LIBS=`${POSTGRESQL_CONFIG} --libdir`
	POSTGRESQL_LIBS="-L$POSTGRESQL_LIBS -lpq"
	
	POSTGRESQL_INCLUDE=`${POSTGRESQL_CONFIG} --includedir`
	POSTGRESQL_INCLUDE="-I$POSTGRESQL_INCLUDE"
    fi
    unset xl_postgresqlnocfgscript

    xxLIBS=$LIBS
    LIBS="$LIBS $POSTGRESQL_LIBS"
    AC_CHECK_LIB(pq,PQsetdbLogin,xl_ext_postgresql=yes, xl_ext_postgresql=no)
    LIBS=$xxLIBS
    if test "X$xl_ext_postgresql" != "Xno" ; then

	AC_MSG_RESULT([**** Enabling PostgreSQL module])
	POSTGRESQL_ENABLED=1
	AC_DEFINE(AXL_WITH_POSTGRESQL,1,[define if PostgreSQL library is used])
	AC_SUBST(POSTGRESQL_LIBS)
	AC_SUBST(POSTGRESQL_INCLUDE)
    fi
fi
AC_SUBST(POSTGRESQL_ENABLED)

dnl ---------------------------------------------------------------------------
dnl Enable MySQL module building
dnl ---------------------------------------------------------------------------

xl_ext_mysql=no ;
AC_ARG_ENABLE(
    mysql,
    [  --enable-mysql[=x]	enable MySQL module [default=/usr/local]],
    [ test "X$enableval" != "Xno" &&
	{
         xl_ext_mysql=yes ;
         xl_ext_mysql_path="$enableval"
      } ],
    [ xl_ext_mysql=yes && xl_ext_mysql_path=/usr/local ])


#dnl Detect MySQL module building
MYSQL_ENABLED=0
if test "$xl_ext_mysql" == "yes"; then
    xl_mysql_no_config_script=no
    AC_PATH_PROGS(
	MYSQL_CONFIG, mysql_config,
	    no_config_script,
	    "$PATH:$xl_ext_mysql/bin")

    if test "X$MYSQL_CONFIG" = "Xno_config_script" ; then
	MYSQL_LIBS="-L$xl_ext_mysql_path/lib -lmysqlclient"
	MYSQL_INCLUDE="-L$xl_ext_mysql_path/include"
    else
	MYSQL_LIBS=`${MYSQL_CONFIG} --libs`
	MYSQL_INCLUDE=`${MYSQL_CONFIG} --cflags`
    fi
    unset xl_mysql_no_config_script
    xxLIBS=$LIBS
    LIBS="$LIBS $MYSQL_LIBS"
    AC_CHECK_LIB(mysqlclient,mysql_init,
        xl_ext_mysql=yes,
	xl_ext_mysql=no)
    LIBS=$xxLIBS
    if test "X$xl_ext_mysql" != "Xno" ; then

	AC_MSG_RESULT([**** Enabling MySQL module])

	AC_DEFINE(AXL_WITH_MYSQL,1,[define if MySQL library is used])

	MYSQL_ENABLED=1
	AC_SUBST(MYSQL_LIBS)
	AC_SUBST(MYSQL_INCLUDE)
    fi
fi
AC_SUBST(MYSQL_ENABLED)

dnl ---------------------------------------------------------------------------
dnl Enable Allegro module building
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(
    allegro,
    [  --enable-allegro[=x]	enable Allegro module [default=/usr/local]],
    [ test "X$enableval" != "Xno" && {
         xl_ext_allegro=yes ;
         xl_ext_allegro_path="$enableval"
		 } ],
    [ xl_ext_allegro=yes && xl_ext_allegro_path=/usr/local ])

#dnl Detect Allegro module building
ALLEGRO_ENABLED=0
if test "$xl_ext_allegro" == "yes" ; then
    xl_allegro_no_config_script=no
    AC_PATH_PROGS(
	ALLEGRO_CONFIG, allegro-config,
	    no_config_script,
	    "$PATH:$xl_ext_allegro/bin")

    if test "X$ALLEGRO_CONFIG" = "Xno_config_script" ; then
	ALLEGRO_LIBS="-L$xl_ext_allegro_path/lib -lalleg -lalleg_unsharable"
	ALLEGRO_INCLUDE="-L$xl_ext_allegro_path/include"
	xxLIBS=$LIBS
	LIBS="$LIBS $ALLEGRO_LIBS"
	dnl AC_MSG_CHECKING([checking for install_allegro in -lalleg... ])
	AC_CHECK_FUNC(install_allegro,
    	    xl_ext_allegro=yes,
	    xl_ext_allegro=no)
    LIBS=$xxLIBS
    else
	ALLEGRO_LIBS=`${ALLEGRO_CONFIG} --libs`
	ALLEGRO_INCLUDE=`${ALLEGRO_CONFIG} --cflags`
	ALLEGRO_VERSION=`${ALLEGRO_CONFIG} --version`
	xl_ext_allegro=yes
    fi
    unset xl_allegro_no_config_script
    if test "X$xl_ext_allegro" != "Xno" ; then

	AC_MSG_RESULT([**** Enabling Allegro module])

	AC_DEFINE(AXL_WITH_ALLEGRO,1,[define if Allegro game programming library is used])

	ALLEGRO_ENABLED=1
	AC_SUBST(ALLEGRO_LIBS)
	AC_SUBST(ALLEGRO_INCLUDE)
    fi
fi
AC_SUBST(ALLEGRO_ENABLED)

dnl ---------------------------------------------------------------------------
dnl check for readline module building
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(
    readline,
    [  --enable-readline	enable readline module [default=yes]],
    [ xl_ext_readline=$enableval ], [ xl_ext_readline=yes ])


if test "$xl_ext_readline" == "yes" ; then
	xxLIBS="$LIBS"
	AC_CHECK_LIB(menu, menu_init, [ READLINE_LIBS="-lmenu"] )
	LIBS="$READLINE_LIBS"
	AC_CHECK_LIB(history,add_history,
	    [ 	READLINE_LIBS="$READLINE_LIBS -lhistory"; ],
	    [   xl_ext_readline=no; ] )
	LIBS="$READLINE_LIBS"
	AC_CHECK_LIB(readline, readline,
	    [ READLINE_LIBS="$READLINE_LIBS -lreadline"; ],
	    [ xl_ext_readline=no;])
	LIBS="$xxLIBS";
	if test "X$xl_ext_readline" != "Xno" ; then
	    AC_MSG_RESULT([**** Enabling Readline/Menu/History module])
	    READLINE_ENABLED=1
	    AC_DEFINE(AXL_WITH_READLINE,1,[define if Readline library is used])
	    AC_CHECK_HEADERS(readline/readline.h readline/history.h readline.h history.h)
	    AC_SUBST(READLINE_LIBS)
	fi
fi
AC_SUBST(READLINE_ENABLED)

dnl ---------------------------------------------------------------------------
dnl Detect GD module building
dnl ---------------------------------------------------------------------------

GD_ENABLED=0
AC_ARG_ENABLE(
    gd,
    [  --enable-gd	enable gd module [default=yes]],
    [ xl_ext_gd=$enableval ], [ xl_ext_gd=yes ])

if test "$xl_ext_gd" == "yes"; then
    xl_gd_no_config_script=no
    AC_PATH_PROGS(
	GD_CONFIG, gdlib-config,
	    no_config_script,
	    "$PATH:$xl_ext_gd/bin")

    if test "X$GD_CONFIG" = "Xno_config_script" ; then
	AC_CHECK_LIB(gd,gdImageCreate,
	    [xl_ext_gd=yes; ] ,
	    [xl_ext_gd=no; ])
	AC_CHECK_LIB(gd,gdImageCreateTrueColor,
	    [xl_ext_gd2=yes; ] ,
	    [xl_ext_gd2=no; ])
	if test "X$xl_ext_gd" = "Xyes" ; then
	    xxLIBS="$LIBS"
	    AC_PATH_X
	    GD_LIBS="$LIBS"
		echo "X:$x_libraries"
		if test "X$x_libraries" != "XNONE" ; then
	    	LIBS="-L$x_libraries -lX11"
		fi
	    AC_CHECK_LIB(Xpm, XpmReadFileToXpmImage, [ GD_LIBS="$GD_LIBS $LIBS -lXpm"])
	    AC_CHECK_LIB(xpm, XpmReadFileToXpmImage, [ GD_LIBS="$GD_LIBS $LIBS -lxpm"])
		AC_CHECK_LIB(jpeg, jpeg_set_defaults, GD_LIBS="$GD_LIBS -ljpeg")
	    AC_CHECK_LIB(freetype, FT_Init_FreeType, GD_LIBS="$GD_LIBS -lfreetype")
	    AC_CHECK_LIB(png, png_create_read_struct, GD_LIBS="$GD_LIBS -lpng",, [ -lz ] )
	    AC_CHECK_LIB(z, deflate, GD_LIBS="$GD_LIBS -lz")
	    LIBS="$xxLIBS"
	    GD_LIBS="-lgd $GD_LIBS"
	fi
    else
		GD_LIBS=`${GD_CONFIG} --ldflags`
		xx=`${GD_CONFIG} --libs`
		GD_LIBS="-lgd $GD_LIBS $xx"
		GD_INCLUDE=`${GD_CONFIG} --cflags`
		xl_ext_gd=yes
		AC_CHECK_LIB(gd,gdImageCreateTrueColor,
	    [xl_ext_gd2=yes; ] ,
	    [xl_ext_gd2=no; ],[ $GD_LIBS ])
    fi
    unset xl_gd_no_config_script
    if test "X$xl_ext_gd" != "Xno" ; then
	AC_MSG_RESULT([**** Enabling gdlib module])
	AC_SUBST(GD_INCLUDE)
	AC_SUBST(GD_LIBS)
	AC_DEFINE(AXL_WITH_GD,1,[define if gd library is used])
	GD_ENABLED=1
    fi
    if test "X$xl_ext_gd2" = "Xyes"; then
	AC_DEFINE(GD_TRUECOLOR,1,[define if gd library is used and has truecolor capabilities])
    fi
fi
AC_SUBST(GD_ENABLED)

dnl ---------------------------------------------------------------------------
dnl Sqlite detection BEGIN
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(
    sqlite,
    [  --enable-sqlite[=x]	enable SQLite module [default=/usr/local]],
    [ test "X$enableval" != "Xno" &&
	{
         xl_ext_sqlite=yes ;
         xl_ext_sqlite_path="$enableval"
      } ],
    [ xl_ext_sqlite=yes && xl_ext_sqlite_path=/usr/local ])


SQLITE_ENABLED=0
if test -n "$xl_ext_sqlite" ; then
    PKG_CHECK_MODULES(SQLITE, [ sqlite ], [ SQLITE_ENABLED=1 ],
    [ 
	AC_CHECK_LIB(sqlite,sqlite_open,[ SQLITE_LIBS="-lsqlite" ; SQLITE_ENABLED=1 ])
	AC_CHECK_HEADER(sqlite.h, [ SQLITE_CFLAGS="" ], [SQLITE_ENABLED=0] )
    ])
    AC_SUBST(SQLITE_LIBS)
    AC_SUBST(SQLITE_CFLAGS)
    if test "X$SQLITE_ENABLED" = "X1" ; then
	AC_MSG_RESULT([**** Enabling SQLite module])
	AC_MSG_CHECKING([SQLite libs])
	AC_MSG_RESULT($SQLITE_LIBS)
	AC_MSG_CHECKING([SQLite cflags])
	AC_MSG_RESULT($SQLITE_CFLAGS)
	xl_ext_sqlite=yes
    else
	xl_ext_sqlite=no
    fi
fi
AC_SUBST(SQLITE_ENABLED)

dnl Sqlite detection END

dnl ---------------------------------------------------------------------------
dnl specify output files
dnl ---------------------------------------------------------------------------


AC_OUTPUT([ 
    Makefile
    src/Makefile
    src/libxl/Makefile
    src/stdaxl/Makefile
    modules/Makefile
    modules/stagpar/Makefile
    tests/Makefile
    tests/lib/Makefile
    doc/Makefile
    doc/docmake.sh
    src/axl/Makefile
    src/axl/axl_config
    src/axl/axl_createmod 
    build/Makefile ])

[ [ -f uconfig.h ] || cp -f $srcdir/uconfig.h . ]

dnl ---------------------------------------------------------------------------
dnl show info for user
dnl ---------------------------------------------------------------------------

cat << EOF
Configured AXL $VERSION with options:

    Target                  $target
    Build debug library     $arg_debug
    Build shared library    $arg_shared
    Build shared-modules    $arg_shared_modules

    CFLAGS                  $CFLAGS
    DEFS                    $DEFS
    LDFLAGS                 $LDFLAGS
    Installation location   $prefix

Enabled features:
    PostgreSQL module       $xl_ext_postgresql
    MySQL module            $xl_ext_mysql
    GD module               $xl_ext_gd
    Readline module         $xl_ext_readline
    Allegro module          $xl_ext_allegro
    SQLite module           $xl_ext_sqlite

Type
    \$make
to compile library, then type
    #make install
to install the AXL.
EOF
